- name: Check rust
  include_tasks: "{{ languages_dir }}/rust.yml"

- name: Get broot (this can take a while)
  community.general.cargo:
    name: broot
    state: present
  register: broot_get

- name: "Check if {{ xdg_config_dir }}/broot exists"
  ansible.builtin.file:
    path: "{{ xdg_config_dir }}/broot"
    state: directory

- name: "Check if {{ xdg_config_dir }}/fish/functionsexists"
  ansible.builtin.file:
    path: "{{ xdg_config_dir }}/fish/functions"
    state: directory

- name: Template the broot config file
  ansible.builtin.template:
    src: "{{ wac_dir }}/roles/cli-tools/broot/conf.hjson.j2"
    dest: "{{ xdg_config_dir }}/broot/conf.hjson"

- name: Template the broot verbs file
  ansible.builtin.template:
    src: "{{ wac_dir }}/roles/cli-tools/broot/verbs.hjson.j2"
    dest: "{{ xdg_config_dir }}/broot/verbs.hjson"

- name: Copy the skin files
  ansible.builtin.copy:
    src: "{{ wac_dir }}/roles/cli-tools/broot/{{ item }}.hjson"
    dest: "{{ xdg_config_dir }}/broot/{{ item }}.hjson"
  loop:
    - white-skin
    - dark-blue-skin

- name: Write the broot shell function
  ansible.builtin.shell: "broot --print-shell-function fish > {{ xdg_config_dir }}/fish/functions/br.fish"
  when: broot_get.changed

- name: Set broot to installed state
  ansible.builtin.shell: "broot --set-install-state installed"
  when: broot_get.changed
